{
  "C:\\Users\\SRAMHARA\\Documents\\sangeeta\\nestboilerplate\\user_verification": {
    "versionSfCore": null,
    "versionFramework": "4.4.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\SRAMHARA\\Documents\\sangeeta\\nestboilerplate\\user_verification",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "nestjsapi-demo",
      "plugins": [
        "serverless-jetpack"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-north-1",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "MainLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nestjsapi-demo-dev-main"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "nestjsapi-demo",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestjsapi-demo-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestjsapi-demo-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "nestjsapi-demo",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "MainLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-38c1618c-78cf",
                  "S3Key": "serverless/nestjsapi-demo/dev/1731577515629-2024-11-14T09:45:15.629Z/nestjsapi-demo.zip"
                },
                "Handler": "dist-lambda/lambda.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "nestjsapi-demo-dev-main",
                "MemorySize": 1024,
                "Timeout": 30,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "MainLogGroup"
              ]
            },
            "MainLambdaVersionPbzZ0ctplT4KxqAvkCTbRkakL6e1wwJGlQSYHfLvHy0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "MainLambdaFunction"
                },
                "CodeSha256": "h5N6j1CcjdxZIp09x9O8Er/5oRNzt1XjIgROb0XYwV8="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-nestjsapi-demo",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceUsers": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "users",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUsersHello": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUsers"
                },
                "PathPart": "hello",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MainLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MainLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUsersHelloGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsersHello"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MainLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MainLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1731577418295": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodGet",
                "ApiGatewayMethodUsersHelloGet"
              ]
            },
            "MainLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "MainLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-38c1618c-78cf",
              "Export": {
                "Name": "sls-nestjsapi-demo-dev-ServerlessDeploymentBucketName"
              }
            },
            "MainLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "MainLambdaVersionPbzZ0ctplT4KxqAvkCTbRkakL6e1wwJGlQSYHfLvHy0"
              },
              "Export": {
                "Name": "sls-nestjsapi-demo-dev-MainLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-nestjsapi-demo-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "main": {
          "handler": "dist-lambda/lambda.handler",
          "timeout": 30,
          "events": [
            {
              "http": {
                "method": "get",
                "path": "",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "method": "get",
                "path": "users/hello",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "nestjsapi-demo-dev-main",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "MainLambdaVersionPbzZ0ctplT4KxqAvkCTbRkakL6e1wwJGlQSYHfLvHy0"
        }
      },
      "resources": {
        "Resources": {},
        "Outputs": {}
      }
    },
    "serviceRawFile": "service: nestjsapi-demo # Your service name\r\n\r\nplugins:\r\n  - 'serverless-jetpack' # Plugin for handling deployment\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x # Node.js runtime version\r\n  region: eu-north-1 # Specify your region here\r\n\r\nfunctions:\r\n  main:\r\n    handler: dist-lambda/lambda.handler # The location of your handler in the dist folder after TypeScript build\r\n    # No API Gateway trigger needed because it's already configured in the AWS Console\r\n    timeout: 30 # Increase to the required time in seconds\r\n    events:\r\n      - http:\r\n          method: GET\r\n          path: / # Base path\r\n      - http:\r\n          method: GET\r\n          path: users/hello # Full path to match the controller\r\n\r\nresources:\r\n  # No additional resources are needed since API Gateway is already configured in AWS Console\r\n  Resources: {} # This will ensure no new resources are created by Serverless\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "abc9eacc3c2f874f44c9fde9b96b5397",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "0642c42c-c979-44d7-ac64-b271f720f89a",
    "orgName": "upcstech",
    "userId": "kWYrV7d16lwHTd2mwF",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "upcstech",
    "subscription": null,
    "userEmail": "sangeeta.uvw@gmail.com",
    "serviceProviderAwsRegion": "eu-north-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "794038221388",
    "projectType": "traditional",
    "versionSf": "4.4.7",
    "serviceProviderAwsCfStackName": "nestjsapi-demo-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:eu-north-1:794038221388:stack/nestjsapi-demo-dev/84633e90-a1d4-11ef-a4ea-0a0d5c2b11d7",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:794038221388:stack/nestjsapi-demo-dev/84633e90-a1d4-11ef-a4ea-0a0d5c2b11d7",
    "serviceProviderAwsCfStackCreated": "2024-11-13T15:32:39.877Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-14T09:47:14.164Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "MainLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:794038221388:function:nestjsapi-demo-dev-main:8",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nestjsapi-demo-dev-MainLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://n6zd1sc1td.execute-api.eu-north-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-nestjsapi-demo-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-38c1618c-78cf",
        "ExportName": "sls-nestjsapi-demo-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}